{"version":3,"sources":["webpack:///src/components/RangeInput.vue","webpack:///src/components/NestedList.vue"],"names":[],"mappings":"AAoMA,wBAEC,YAAa,CACb,kBACD,CC3IA,2BACC,eAAgB,CAChB,aAAc,CACd,oBAAqB,CACrB,iCAAkC,CAClC,iBAAkB,CAClB,SACD,CAEA,8BACC,6BACD,CAEA,8BACC,iBAAkB,CAClB,KAAQ,CACR,MAAS,CACT,iBAAkB,CAClB,UAAW,CACX,4BAA6B,CAC7B,iBAAkB,CAClB,4BACD,CAEA,yBACC,UAAW,CACX,uBAAkC,CAClC,2BAA4B,CAC5B,iBAAkB,CAClB,gBAAiB,CACjB,eAAgB,CAChB,kBACD,CAEA,gCACC,WAAY,CACZ,sBACD,CAEA,qCACC,8BACD,CAEA,wCACC,+BACD,CAEA,4CACC,+BACD","file":"testing~testingStore.3f9cb907.css","sourcesContent":["<template>\n\t<div class=\"form-row mb-1\">\n\t\t<label v-on:click=\"toggleHelp\" class=\"col-md-4 col-form-label\">\n\t\t\t{{ title }}\n\t\t\t<font-awesome-icon\n\t\t\t\tv-if=\"$slots.help\"\n\t\t\t\t:icon=\"\n\t\t\t\t\tshowHelp\n\t\t\t\t\t\t? ['fas', 'question-circle']\n\t\t\t\t\t\t: ['far', 'question-circle']\n\t\t\t\t\"\n\t\t\t\t:class=\"showHelp ? 'text-info' : ''\"\n\t\t\t/>\n\t\t</label>\n\t\t<div class=\"col-md-8\">\n\t\t\t<div class=\"form-row vaRow mb-1\">\n\t\t\t\t<label v-if=\"label\" class=\"col-2 col-form-label valueLabel\">\n\t\t\t\t\t{{ label }}\n\t\t\t\t</label>\n\t\t\t\t<button\n\t\t\t\t\tclass=\"col-1 btn btn-block btn-info\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t@click=\"decrement\"\n\t\t\t\t>\n\t\t\t\t\t<font-awesome-icon :icon=\"['fas', 'step-backward']\" />\n\t\t\t\t</button>\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\tclass=\"form-control-range rangeInput\"\n\t\t\t\t\t\t:min=\"min\"\n\t\t\t\t\t\t:max=\"max\"\n\t\t\t\t\t\t:step=\"step\"\n\t\t\t\t\t\tv-model.number=\"sliderValue\"\n\t\t\t\t\t\tv-bind=\"$attrs\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tclass=\"col-1 btn btn-block btn-info\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t@click=\"increment\"\n\t\t\t\t>\n\t\t\t\t\t<font-awesome-icon :icon=\"['fas', 'step-forward']\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div v-if=\"showHelp\" class=\"form-row alert alert-info my-1 small\">\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<slot name=\"help\"></slot>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n\tfaQuestionCircle as fasQuestionCircle,\n\tfaStepForward as fasStepForward,\n\tfaStepBackward as fasStepBackward,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faQuestionCircle as farQuestionCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\n\nlibrary.add(\n\tfasQuestionCircle,\n\tfarQuestionCircle,\n\tfasStepForward,\n\tfasStepBackward\n);\n\nexport default {\n\tname: \"RangeInput\",\n\tinheritAttrs: false,\n\tprops: {\n\t\ttitle: String,\n\t\tmodelValue: { type: Number },\n\t\tunit: String,\n\t\tmin: { type: Number, default: 0 },\n\t\tmax: { type: Number, default: 100 },\n\t\tstep: { type: Number, default: 1 },\n\t\tlabels: { type: Array },\n\t},\n\temits: [\"update:modelValue\"],\n\tdata() {\n\t\treturn {\n\t\t\tshowHelp: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\tlabel() {\n\t\t\tvar currentLabel;\n\t\t\tif (this.labels && this.sliderValue != undefined) {\n\t\t\t\tif (this.sliderValue < this.labels.length) {\n\t\t\t\t\tcurrentLabel = this.labels[this.sliderValue].label;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\"index out of bounds: \" + this.sliderValue);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentLabel = this.sliderValue;\n\t\t\t}\n\t\t\tif (typeof currentLabel == \"number\") {\n\t\t\t\tcurrentLabel = currentLabel.toLocaleString(undefined, {\n\t\t\t\t\tminimumFractionDigits: this.precision,\n\t\t\t\t\tmaximumFractionDigits: this.precision,\n\t\t\t\t});\n\t\t\t\tif (this.unit) {\n\t\t\t\t\tcurrentLabel += \" \" + this.unit;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn currentLabel;\n\t\t},\n\t\tprecision() {\n\t\t\tif (!isFinite(this.step)) return 0;\n\t\t\tvar e = 1,\n\t\t\t\tp = 0;\n\t\t\twhile (Math.round(this.step * e) / e !== this.step) {\n\t\t\t\te *= 10;\n\t\t\t\tp++;\n\t\t\t}\n\t\t\treturn p;\n\t\t},\n\t\tsliderValue: {\n\t\t\tget() {\n\t\t\t\tif (this.labels) {\n\t\t\t\t\tvar myValue = undefined;\n\t\t\t\t\tfor (let index = 0; index < this.labels.length; index++) {\n\t\t\t\t\t\tif (this.labels[index].value == this.modelValue) {\n\t\t\t\t\t\t\tmyValue = index;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tmyValue === undefined &&\n\t\t\t\t\t\tthis.modelValue !== undefined\n\t\t\t\t\t) {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\"sliderValue: not found in values: \" +\n\t\t\t\t\t\t\t\tthis.modelValue\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn myValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.modelValue;\n\t\t\t},\n\t\t\tset(newSliderValue) {\n\t\t\t\tif (this.labels) {\n\t\t\t\t\tvar myValue = this.labels[newSliderValue].value;\n\t\t\t\t\tthis.$emit(\"update:modelValue\", myValue);\n\t\t\t\t} else {\n\t\t\t\t\tthis.$emit(\"update:modelValue\", newSliderValue);\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\tvalue: {\n\t\t\tget() {\n\t\t\t\treturn this.modelValue;\n\t\t\t},\n\t\t\tset(newValue) {\n\t\t\t\tthis.$emit(\"update:modelValue\", newValue);\n\t\t\t},\n\t\t},\n\t},\n\tmethods: {\n\t\ttoggleHelp() {\n\t\t\tthis.showHelp = !this.showHelp && this.$slots.help !== undefined;\n\t\t},\n\t\tincrement() {\n\t\t\tvar newSliderValue = Math.min(\n\t\t\t\tthis.sliderValue + this.step,\n\t\t\t\tthis.max\n\t\t\t);\n\t\t\t// rounding needed!\n\t\t\tthis.sliderValue =\n\t\t\t\tMath.round(newSliderValue * Math.pow(10, this.precision)) /\n\t\t\t\tMath.pow(10, this.precision);\n\t\t},\n\t\tdecrement() {\n\t\t\tvar newSliderValue = Math.max(\n\t\t\t\tthis.sliderValue - this.step,\n\t\t\t\tthis.min\n\t\t\t);\n\t\t\t// rounding needed!\n\t\t\tthis.sliderValue =\n\t\t\t\tMath.round(newSliderValue * Math.pow(10, this.precision)) /\n\t\t\t\tMath.pow(10, this.precision);\n\t\t},\n\t},\n\tcomponents: {\n\t\tFontAwesomeIcon,\n\t},\n};\n</script>\n\n<style scoped>\n.vaRow {\n\t/* vertical alignment of content in rows */\n\tdisplay: flex;\n\talign-items: center;\n}\n</style>\n","<template>\n\t<draggable\n\t\tclass=\"dragArea w-100 mb-0\"\n\t\ttag=\"ul\"\n\t\t:list=\"list\"\n\t\t:group=\"{ name: 'g1' }\"\n\t\titem-key=\"id\"\n\t\thandle=\".handle\"\n\t>\n\t\t<template #item=\"{ element }\">\n\t\t\t<li>\n\t\t\t\t<div class=\"element-titel\" :class=\"classes(element)\">\n\t\t\t\t\t<font-awesome-icon\n\t\t\t\t\t\tclass=\"handle\"\n\t\t\t\t\t\t:icon=\"['fas', 'arrows-alt']\"\n\t\t\t\t\t/>\n\t\t\t\t\t{{ element.value }}\n\t\t\t\t</div>\n\t\t\t\t<nested-list v-model=\"element.children\" />\n\t\t\t</li>\n\t\t</template>\n\t</draggable>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faArrowsAlt as fasArrowsAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\n\nlibrary.add(fasArrowsAlt);\n\nexport default {\n\tprops: {\n\t\tlist: {\n\t\t\ttype: Object,\n\t\t},\n\t},\n\tcomponents: {\n\t\tdraggable,\n\t\tFontAwesomeIcon,\n\t},\n\tname: \"nested-list\",\n\tmethods: {\n\t\tclasses(element) {\n\t\t\tvar myClasses = \"\";\n\t\t\tif (element.id == \"counter0\") {\n\t\t\t\tmyClasses += \"grid\";\n\t\t\t} else if (element.id.startsWith(\"counter\")) {\n\t\t\t\tmyClasses += \"counter\";\n\t\t\t} else if (element.id.startsWith(\"cp\")) {\n\t\t\t\tmyClasses += \"chargepoint\";\n\t\t\t}\n\t\t\treturn myClasses;\n\t\t},\n\t},\n};\n</script>\n\n<style scoped>\n.dragArea {\n\tmin-height: 40px;\n\tcolor: #e9ecef;\n\tlist-style-type: none;\n\tborder: 1px solid var(--secondary);\n\tborder-radius: 3px;\n\tpadding: 0px;\n}\n\n.dragArea ul {\n\tbackground-color: var(--light);\n}\n\n.dragArea li {\n\tposition: relative;\n\ttop: 0px;\n\tleft: 0px;\n\tpadding-left: 40px;\n\tmargin: 5px;\n\tborder: 1px solid var(--dark);\n\tborder-radius: 3px;\n\tbackground-color: var(--dark);\n}\n\n.handle {\n\tfloat: left;\n\tbackground-position: center center;\n\tbackground-repeat: no-repeat;\n\tmargin-left: -35px;\n\tmargin-right: 5px;\n\tfont-size: 1.1em;\n\tcolor: var(--light);\n}\n\n.element-titel {\n\tpadding: 7px;\n\tbackground: var(--info);\n}\n\n.element-titel.grid {\n\tbackground-color: var(--danger);\n}\n\n.element-titel.counter {\n\tbackground-color: var(--warning);\n}\n\n.element-titel.chargepoint {\n\tbackground-color: var(--primary);\n}\n</style>\n"]}